"""Updated FieldMatch table

Revision ID: 6625a7b2a9df
Revises: 
Create Date: 2025-01-03 11:08:55.716181

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6625a7b2a9df'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    # Step 1: Drop the existing unique constraint
    with op.batch_alter_table("field_matches", schema=None) as batch_op:
        batch_op.drop_constraint('unique_field_match', type_='unique')

    # Step 2: Remove old columns
    with op.batch_alter_table("field_matches", schema=None) as batch_op:
        batch_op.drop_column('source_schema_id')
        batch_op.drop_column('target_schema_id')
        batch_op.drop_column('source_entity_name')
        batch_op.drop_column('target_entity_name')

    # Step 3: Add new columns
    with op.batch_alter_table("field_matches", schema=None) as batch_op:
        batch_op.add_column(sa.Column('source_entity_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('model_name', sa.String(), nullable=False))

    # Step 4: Add foreign key constraint
    op.create_foreign_key(
        'fk_field_matches_source_entity_id',  # Constraint name
        'field_matches',                     # Table name
        'entities',                          # Referenced table
        ['source_entity_id'],                # Local columns
        ['id']                               # Referenced columns
    )

    # Step 5: Add unique constraint
    op.create_unique_constraint(
        'unique_field_match',  # Constraint name
        'field_matches',       # Table name
        ['source_entity_id']   # Columns
    )

def downgrade() -> None:
    with op.batch_alter_table("field_matches", schema=None) as batch_op:
        # ### commands auto generated by Alembic - please adjust! ###
        batch_op.add_column(sa.Column('source_schema_id', sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column('source_entity_name', sa.VARCHAR(length=100), nullable=False))
        batch_op.add_column(sa.Column('target_entity_name', sa.VARCHAR(length=100), nullable=False))
        batch_op.add_column(sa.Column('target_schema_id', sa.INTEGER(), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint('unique_field_match', type_='unique')
        batch_op.create_unique_constraint('unique_field_match', ['source_schema_id', 'target_schema_id', 'source_entity_name', 'target_entity_name'])
        batch_op.drop_column('model_name')
        batch_op.drop_column('source_entity_id')
        # ### end Alembic commands ###
